@model TwoStu.Logic.Models.CreatePhysicsSolutionModel

@{
    ViewBag.Title = "Добавить решение по физике";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("CreatePhysisc", "TaskSolutions", FormMethod.Post, htmlAttributes: new { id = "myForm", enctype = "multipart/form-data" }) ) 
{
     @Html.AntiForgeryToken()

     <div class="form-horizontal">
        <h4>Добавить решение задачи по физике</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       


        <div class="form-group">
            @Html.LabelFor(model => model.TaskDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.TaskDesc, new { htmlAttributes = new { @class = "form-control", rows = 20 } })
                @Html.ValidationMessageFor(model => model.TaskDesc, "", new { @class = "text-danger" })
            </div>
        </div>

         <div class="form-group">
             @Html.LabelFor(model => model.SubjectSectionId, htmlAttributes: new { @class = "control-label col-md-2" })
             <div class="col-md-10">
                 @Html.DropDownList("SubjectSectionId", null, htmlAttributes: new { @class = "form-control" })
                 @Html.ValidationMessageFor(model => model.SubjectSectionId, "", new { @class = "text-danger" })
             </div>
         </div>

         <div class="form-group">
             @Html.LabelFor(model => model.WorkTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
             <div class="col-md-10">
                 @Html.DropDownList("WorkTypeId", null, htmlAttributes: new { @class = "form-control" })
                 @Html.ValidationMessageFor(model => model.WorkTypeId, "", new { @class = "text-danger" })
             </div>
         </div>

        <div class="form-group">
            @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.File, htmlAttributes: new { id = "fileUpload", type = "file"})
                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btnSubmit" type="submit" value="Добавить решение" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var btnSubmit = $("#btnSubmit");

        $(document).ready(function () {
            $(document).keydown(function (e) {
                if (e.keyCode == '32') {
                    btnSubmit.click();
                }
            });
        });
</script>
}
